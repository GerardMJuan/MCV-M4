function [par,P,RC,F1,Q] = getAssessmentAdapt(m,v,alpha,p,dir,~,range)
% This function provides with an assessment of the model trained before, with  
% adaptability in each frame
TP = 0;
FP = 0;
TN = 0;
FN = 0;

TPw = 0;
FPw = 0;
FNw = 0;
for i=range,
    % Read files
    gt_frame = imread(strcat(dir,'/groundtruth/gt',sprintf('%06d',i),'.png'));
    frame = double(rgb2gray(imread(strcat(dir,'/input/in',sprintf('%06d',i),'.jpg'))));
    
    % get the results from the model
    res_frame = abs(frame-m) >= alpha*(sqrt(v) + 2);
    
    % adapt the model
    [m,v] = adaptModel(m,v,p,res_frame,frame);
    % (week 3 task 1) fill the task
    res_frame = imfill(res_frame,4,'holes');
    %Get dimensions of frame
    [dimX,dimY] = size(gt_frame);
    
    %Standard evaluation of the image
    %For each pixel
    for px_i=1:dimX,
        for px_j=1:dimY,
            gt = gt_frame(px_i,px_j);
            res = res_frame(px_i,px_j);
            %If its FOREGROUND and had to be FOREGROUND it's TRUE POSITIVE
            if (gt == 255 && (res));
                TP = TP + 1;
            %If its FOREGROUND and had to be BACKGROUND it's FALSE POSITIVE
            elseif (gt == 0 || gt == 50) && (res);
                FP = FP + 1;
            %If its BACKGROUND and had to be BACKGROUND it's TRUE NEGATIVE
            elseif (gt == 0 || gt == 50) && (~res);
                TN = TN + 1;
            %If its BACKGROUND and had to be FOREGROUND it's FALSE NEGATIVE
            elseif (gt == 255) && (~res);
                FN = FN + 1;
            end;
            % Weighted F-measure computation

            [TPw_t,FPw_t,FNw_t] = WFb(res,gt);
            TPw = TPw_t + TPw;
            FPw = FPw_t + FPw;
            FNw = FNw_t + FNw;
        end;
    end;
end;
P = TP/(TP+FP);
RC = TP/(TP+FN);
F1 = 2*(P*RC)/(P+RC);
par = struct('TP',TP,'FP',FP,'TN',TN,'FN',FN);

Rw = TPw./(TPw+FNw);
Pw = TPw./(TPw+FPw); %Weighted Precision
Q = (1 + eps^2)*(Rw*Pw)./((eps^2*Pw)); %Beta=1;

end